openapi: 3.0.3
info:
  title: Vertragsverwaltung API
  description: API zur Verwaltung von Verträgen.
  version: 1.0.0
servers:
  - url: /api/vertragsverwaltung
    description: Relative base url
  - url: http://localhost:8080/api/vertragsverwaltung
    description: Local Dev
security:
  - BasicAuth: []
  - CsrfTokenAuth: []
paths:
  /vertrage:
    get:
      summary: Alle Verträge abrufen
      responses:
        '200':
          description: Erfolgreiche Antwort mit allen Verträgen
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Vertrag'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        '401':
          description: Unauthenticated
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        '403':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        '404':
          description: Keine Verträge gefunden
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        default:
          description: Unexpected Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
    put:
      summary: Neuen Vertrag erstellen
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vertrag'
      responses:
        '200':
          description: Created
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        '401':
          description: Unauthenticated
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        '403':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        default:
          description: Unexpected Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /vertrage/{id}:
    get:
      summary: Vertrag nach ID abrufen
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Vertrag gefunden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vertrag'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        '401':
          description: Unauthenticated
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        '403':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        '404':
          description: Vertrag nicht gefunden
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        default:
          description: Unexpected Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
    post:
      summary: Vertrag aktualisieren
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        '200':
          description: Vertrag erfolgreich aktualisiert
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vertrag'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        '401':
          description: Unauthenticated
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        '403':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        '404':
          description: Vertrag nicht gefunden
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        default:
          description: Unexpected Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
    delete:
      summary: Vertrag löschen
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Vertrag erfolgreich gelöscht
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Vertrag"
        '204':
          description: Vertrag erfolgreich gelöscht
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Vertrag"
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        '401':
          description: Unauthenticated
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        '403':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        '404':
          description: Vertrag nicht gefunden
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        default:
          description: Unexpected Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
components:
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
    CsrfTokenAuth:
      type: apiKey
      in: header
      name: X-Csrf-Token
  schemas:
    Vertrag:
      type: object
      properties:
        vsnr:
          type: integer
        monatlich:
          type: boolean
        preis:
          type: number
          format: float
        versicherungsbeginn:
          type: string
          format: date
        versicherungsablauf:
          type: string
          format: date
        antragsDatum:
          type: string
          format: date
        partner:
          $ref: '#/components/schemas/Partner'
        fahrzeug:
          $ref: '#/components/schemas/Fahrzeug'
    Partner:
      type: object
      properties:
        vorname:
          type: string
        nachname:
          type: string
        geschlecht:
          type: string
          maxLength: 1
        geburtsdatum:
          type: string
          format: date
        land:
          type: string
        strasse:
          type: string
        hausnummer:
          type: string
        plz:
          type: string
        stadt:
          type: string
        bundesland:
          type: string
    Fahrzeug:
      type: object
      properties:
        amtlichesKennzeichen:
          type: string
        hersteller:
          type: string
        typ:
          type: string
        hoechstgeschwindigkeit:
          type: integer
        wagnisskennziffer:
          type: integer
    Problem:
      type: object
      description: AXA extension of the problem structure
      properties:
        type:
          type: string
          format: uri
          description: |
            An absolute URI that identifies the problem type. When dereferenced
            it SHOULD provide human-readable documentation for the problem type
            (e.g. using HTML).
          default: 'about:blank'
          example: 'https://www.axa.com/api/problem/constraint-violation'
          minLength: 0
          maxLength: 100
        title:
          type: string
          description: |
            A short summary of the problem type. Written in english and readable
            for engineers (usually not suited for non technical stakeholders and
            not localized); example: Service Unavailable
          example: Constraint Violation
          minLength: 0
          maxLength: 150
        status:
          type: integer
          format: int32
          description: |
            The HTTP status code generated by the origin server for this occurrence
            of the problem.
          minimum: 100
          maximum: 600
          exclusiveMaximum: true
          example: 500
        detail:
          type: string
          description: |
            A human readable explanation specific to this occurrence of the
            problem.
          example: Connection to backend timed out
          minLength: 0
          maxLength: 300
        instance:
          type: string
          format: uri
          description: |
            An absolute URI that identifies the specific occurrence of the problem.
            It may or may not yield further information if dereferenced.
          example: 'https://www.axa.com/api/customer/4711'
          minLength: 0
          maxLength: 300
        errorcode:
          type: string
          description: Optional additional error code to signal a more detailed error.
          example: '401.001'
          minLength: 0
          maxLength: 19
        timestamp:
          type: string
          description: Optional timestamp by when the problem occurred.
          format: date-time
          example: '2018-11-04T08:58:05:246Z'
        violations:
          type: array
          description: List of validation errors.
          example: '[{ field: "name", message: "Invalid name"}]'
          items:
            type: object
            description: The violation item.
            properties:
              field:
                type: string
                description: Json pointer to the field where the problem occour
                example: customer.name
                minLength: 0
                maxLength: 100
              message:
                type: string
                description: The problem message description
                example: The name is missing
                minLength: 0
                maxLength: 200
          minItems: 1
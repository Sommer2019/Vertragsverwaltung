openapi: 3.0.3
info:
  title: Vertragsverwaltung API
  description: API zur Verwaltung von Verträgen.
  version: 1.0.0
servers:
  - url: /api/vertragsverwaltung
    description: Relative base url
  - url: http://localhost:8080/api/vertragsverwaltung
    description: Local Dev
security:
  - BasicAuth: []
  - CsrfTokenAuth: []
paths:
  /vertrage:
    get:
      summary: Alle Verträge abrufen
      responses:
        '200':
          description: Erfolgreiche Antwort mit allen Verträgen
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Vertrag'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Vertrag"
        '401':
          description: Unauthenticated
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Vertrag"
        '403':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Vertrag"
        '404':
          description: Keine Verträge gefunden
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Vertrag"
        default:
          description: Unexpected Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Vertrag"
    put:
      summary: Neuen Vertrag erstellen
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vertrag'
      responses:
        '200':
          description: Created
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Vertrag"
        '401':
          description: Unauthenticated
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Vertrag"
        '403':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Vertrag"
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Vertrag"
        default:
          description: Unexpected Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Vertrag"
  /vertrage/{id}:
    get:
      summary: Vertrag nach ID abrufen
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Vertrag gefunden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vertrag'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Vertrag"
        '401':
          description: Unauthenticated
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Vertrag"
        '403':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Vertrag"
        '404':
          description: Vertrag nicht gefunden
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Vertrag"
        default:
          description: Unexpected Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Vertrag"
    post:
      summary: Vertrag aktualisieren
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        '200':
          description: Vertrag erfolgreich aktualisiert
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vertrag'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Vertrag"
        '401':
          description: Unauthenticated
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Vertrag"
        '403':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Vertrag"
        '404':
          description: Vertrag nicht gefunden
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Vertrag"
        default:
          description: Unexpected Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Vertrag"
    delete:
      summary: Vertrag löschen
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Vertrag erfolgreich gelöscht
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Vertrag"
        '204':
          description: Vertrag erfolgreich gelöscht
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Vertrag"
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Vertrag"
        '401':
          description: Unauthenticated
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Vertrag"
        '403':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Vertrag"
        '404':
          description: Vertrag nicht gefunden
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Vertrag"
        default:
          description: Unexpected Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Vertrag"
components:
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
    CsrfTokenAuth:
      type: apiKey
      in: header
      name: X-Csrf-Token
  schemas:
    Vertrag:
      type: object
      properties:
        vsnr:
          type: integer
        monatlich:
          type: boolean
        preis:
          type: number
          format: float
        versicherungsbeginn:
          type: string
          format: date
        versicherungsablauf:
          type: string
          format: date
        antragsDatum:
          type: string
          format: date
        partner:
          $ref: '#/components/schemas/Partner'
        fahrzeug:
          $ref: '#/components/schemas/Fahrzeug'
    Partner:
      type: object
      properties:
        vorname:
          type: string
        nachname:
          type: string
        geschlecht:
          type: string
          maxLength: 1
        geburtsdatum:
          type: string
          format: date
        land:
          type: string
        strasse:
          type: string
        hausnummer:
          type: string
        plz:
          type: string
        stadt:
          type: string
        bundesland:
          type: string
    Fahrzeug:
      type: object
      properties:
        amtlichesKennzeichen:
          type: string
        hersteller:
          type: string
        typ:
          type: string
        hoechstgeschwindigkeit:
          type: integer
        wagnisskennziffer:
          type: integer
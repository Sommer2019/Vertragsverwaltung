openapi: 3.0.3
info:
  title: Preisverwaltung API
  description: API zur Verwaltung von Preisberechnung.
  version: 1.0.0
servers:
  - url: /api/preisverwaltung
    description: Relative base url
  - url: http://localhost:8080/api/preisverwaltung
    description: Local Dev
security:
  - basicAuth: []
paths:
  /:
    get:
      security:
        - basicAuth: [ ]
      summary: Preismodell abrufen
      responses:
        '200':
          description: Erfolgreiche Antwort mit Preismodell
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        '401':
          description: Unauthenticated
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        '403':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        '404':
          description: Keine Verträge gefunden
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        default:
          description: Unexpected Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
    post:
      security:
        - basicAuth: []
      summary: Preise neu berechnen
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PreisDTO'
      responses:
        '200':
          description: Erfolgreiche Antwort mit Einnahmensumme
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        '401':
          description: Unauthenticated
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        '403':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        default:
          description: Unexpected Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
      in: header
      name: Basic
  schemas:
    PreisDTO:
      type: object
      required:
        - faktor
        - age
        - speed
      properties:
        speed:
          type: number
          format: double
          minimum: 0.0000001
          maximum: 9.9999999
          example: 0.7
          description: "Geschwindigkeitsfaktor, muss größer als 0 und kleiner als 10 sein."

        age:
          type: number
          format: double
          minimum: 0.0000001
          maximum: 9.9999999
          example: 0.3
          description: "Alter (in Jahren), muss größer als 0 und kleiner als 10 sein."

        faktor:
          type: number
          format: double
          minimum: 0.0000001
          maximum: 9.9999999
          example: 1.7
          description: "Multiplikationsfaktor, muss größer als 0 und kleiner als 10 sein."
    Problem:
      type: object
      description: AXA extension of the problem structure
      properties:
        type:
          type: string
          format: uri
          description: |
            An absolute URI that identifies the problem type. When dereferenced
            it SHOULD provide human-readable documentation for the problem type
            (e.g. using HTML).
          default: 'about:blank'
          example: 'https://www.axa.com/api/problem/constraint-violation'
          minLength: 0
          maxLength: 100
        title:
          type: string
          description: |
            A short summary of the problem type. Written in english and readable
            for engineers (usually not suited for non technical stakeholders and
            not localized); example: Service Unavailable
          example: Constraint Violation
          minLength: 0
          maxLength: 150
        status:
          type: integer
          format: int32
          description: |
            The HTTP status code generated by the origin server for this occurrence
            of the problem.
          minimum: 100
          maximum: 600
          exclusiveMaximum: true
          example: 500
        detail:
          type: string
          description: |
            A human readable explanation specific to this occurrence of the
            problem.
          example: Connection to backend timed out
          minLength: 0
          maxLength: 300
        instance:
          type: string
          format: uri
          description: |
            An absolute URI that identifies the specific occurrence of the problem.
            It may or may not yield further information if dereferenced.
          example: 'https://www.axa.com/api/customer/4711'
          minLength: 0
          maxLength: 300
        errorcode:
          type: string
          description: Optional additional error code to signal a more detailed error.
          example: '401.001'
          minLength: 0
          maxLength: 19
        timestamp:
          type: string
          description: Optional timestamp by when the problem occurred.
          format: date-time
          example: '2018-11-04T08:58:05:246Z'
        violations:
          type: array
          description: List of validation errors.
          example: '[{ field: "name", message: "Invalid name"}]'
          items:
            type: object
            description: The violation item.
            properties:
              field:
                type: string
                description: Json pointer to the field where the problem occour
                example: customer.name
                minLength: 0
                maxLength: 100
              message:
                type: string
                description: The problem message description
                example: The name is missing
                minLength: 0
                maxLength: 200
          minItems: 1
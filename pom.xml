<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- Parent-Definition für Spring Boot -->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.4.2</version>
        <relativePath/>
    </parent>

    <groupId>de.axa.robin</groupId>
    <artifactId>Vertragsverwaltung</artifactId>
    <version>1.0-SNAPSHOT</version>
    <name>Vertragsverwaltung</name>
    <description>Vertragsverwaltung in Spring Boot</description>

    <properties>
        <!-- Allgemeine Einstellungen -->
        <maven.compiler.source>21</maven.compiler.source>
        <maven.compiler.target>21</maven.compiler.target>
        <java.version>21</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- Versionsangaben für Dependencies -->
        <org.junit.jupiter.version>5.11.4</org.junit.jupiter.version>
        <org.mockito.version>5.15.2</org.mockito.version>
        <spring.webmvc.version>6.2.2</spring.webmvc.version>
        <jakarta.servlet-api.version>6.1.0</jakarta.servlet-api.version>
        <jakarta.json-api.version>2.1.3</jakarta.json-api.version>
        <org.glassfish.jakarta.json.version>2.0.1</org.glassfish.jakarta.json.version>
        <parsson.version>1.1.7</parsson.version>
        <jackson.databind.nullable.version>0.2.6</jackson.databind.nullable.version>
        <springdoc.openapi-ui.version>1.8.0</springdoc.openapi-ui.version>
        <openapi.generator.maven.plugin.version>7.11.0</openapi.generator.maven.plugin.version>
        <org.projectlombok.version>1.18.36</org.projectlombok.version>
        <org.openjdk.nashorn.version>15.6</org.openjdk.nashorn.version>
        <com.squareup.okhttp3.version>4.12.0</com.squareup.okhttp3.version>
        <jakarta.annotation-api.version>3.0.0</jakarta.annotation-api.version>
        <org.mapstruct.version>1.6.3</org.mapstruct.version>
        <org.projectlombok.mapstruck.version>0.2.0</org.projectlombok.mapstruck.version>
        <org.apache.maven.plugins.version>3.13.0</org.apache.maven.plugins.version>
    </properties>

    <dependencies>
        <!-- ==================== Spring Boot Starters ==================== -->
        <!-- Basisfunktionalitäten -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>
        <!-- Web-Funktionalitäten -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <!-- Security-Funktionalitäten -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <!-- Validierung -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
        <!-- Thymeleaf Template Engine -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
        <!-- Actuator für Monitoring und Management -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-oauth2-resource-server</artifactId>
        </dependency>
        <!-- ==================== Mapping ==================== -->
        <!-- MapStruct for object mapping -->
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
            <version>${org.mapstruct.version}</version>
        </dependency>
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct-processor</artifactId>
            <version>${org.mapstruct.version}</version>
            <scope>provided</scope>
        </dependency>
        <!-- ==================== Test Dependencies ==================== -->
        <!-- Spring Boot und Spring Security Test-Support -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- JUnit 5 -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${org.junit.jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <version>${org.junit.jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- Mockito für JUnit 5 -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <version>${org.mockito.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- MockWebServer für HTTP-Tests -->
        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>mockwebserver</artifactId>
            <version>${com.squareup.okhttp3.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- ==================== Zusätzliche Spring/Web-Komponenten ==================== -->
        <!-- Spezifische Spring MVC Komponente (falls benötigt) -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${spring.webmvc.version}</version>
        </dependency>
        <!-- Servlet API (wird zur Laufzeit bereitgestellt) -->
        <dependency>
            <groupId>jakarta.servlet</groupId>
            <artifactId>jakarta.servlet-api</artifactId>
            <version>${jakarta.servlet-api.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- ==================== JSON und Parsing Bibliotheken ==================== -->
        <!-- Jakarta JSON API -->
        <dependency>
            <groupId>jakarta.json</groupId>
            <artifactId>jakarta.json-api</artifactId>
            <version>${jakarta.json-api.version}</version>
        </dependency>
        <!-- GlassFish Implementierung von Jakarta JSON -->
        <dependency>
            <groupId>org.glassfish</groupId>
            <artifactId>jakarta.json</artifactId>
            <version>${org.glassfish.jakarta.json.version}</version>
        </dependency>
        <!-- Parsson Parser (Alternative/Ergänzung zur JSON-Verarbeitung) -->
        <dependency>
            <groupId>org.eclipse.parsson</groupId>
            <artifactId>parsson</artifactId>
            <version>${parsson.version}</version>
        </dependency>
        <!-- Erweiterte Unterstützung für Nullable-Werte in Jackson -->
        <dependency>
            <groupId>org.openapitools</groupId>
            <artifactId>jackson-databind-nullable</artifactId>
            <version>${jackson.databind.nullable.version}</version>
        </dependency>

        <!-- ==================== OpenAPI und Dokumentation ==================== -->
        <!-- OpenAPI UI zur Dokumentation der APIs -->
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-ui</artifactId>
            <version>${springdoc.openapi-ui.version}</version>
        </dependency>
        <!-- OpenAPI Generator Plugin als Dependency (scope provided, wird z. B. zur Laufzeiterzeugung verwendet) -->
        <dependency>
            <groupId>org.openapitools</groupId>
            <artifactId>openapi-generator-maven-plugin</artifactId>
            <version>${openapi.generator.maven.plugin.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- ==================== Utility und Sonstige Bibliotheken ==================== -->
        <!-- Lombok für Boilerplate-Code-Reduktion -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${org.projectlombok.version}</version>
            <scope>provided</scope>
        </dependency>
        <!-- Nashorn JavaScript Engine (nashorn-core) -->
        <dependency>
            <groupId>org.openjdk.nashorn</groupId>
            <artifactId>nashorn-core</artifactId>
            <version>${org.openjdk.nashorn.version}</version>
        </dependency>
        <!-- OkHttp als HTTP-Client -->
        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>okhttp</artifactId>
            <version>${com.squareup.okhttp3.version}</version>
        </dependency>
        <!-- Jakarta Annotation API -->
        <dependency>
            <groupId>jakarta.annotation</groupId>
            <artifactId>jakarta.annotation-api</artifactId>
            <version>${jakarta.annotation-api.version}</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- ==================== Spring Boot Maven Plugin ==================== -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

            <!-- ==================== Maven Compiler Plugin ==================== -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${org.apache.maven.plugins.version}</version>
                <configuration>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </path>
                        <path>
                            <groupId>org.mapstruct</groupId>
                            <artifactId>mapstruct-processor</artifactId>
                            <version>${org.mapstruct.version}</version>
                        </path>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok-mapstruct-binding</artifactId>
                            <version>${org.projectlombok.mapstruck.version}</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>

            <!-- ==================== OpenAPI Generator Maven Plugin ==================== -->
            <plugin>
                <groupId>org.openapitools</groupId>
                <artifactId>openapi-generator-maven-plugin</artifactId>
                <version>${openapi.generator.maven.plugin.version}</version>
                <executions>
                    <execution>
                        <id>vertragsverwaltung</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${project.basedir}/src/main/resources/openapi/openapi.yaml</inputSpec>
                            <generatorName>java</generatorName>
                            <library>resttemplate</library>
                            <generateSupportingFiles>true</generateSupportingFiles>
                            <apiPackage>de.axa.robin.vertragsverwaltung</apiPackage>
                            <invokerPackage>de.axa.robin.vertragsverwaltung</invokerPackage>
                            <generateApis>true</generateApis>
                            <generateApiTests>false</generateApiTests>
                            <modelPackage>de.axa.robin.vertragsverwaltung.model</modelPackage>
                            <generateModels>true</generateModels>
                            <generateModelTests>false</generateModelTests>
                            <generateApiDocumentation>true</generateApiDocumentation>
                            <skipValidateSpec>false</skipValidateSpec>
                            <ignoreFileOverride>${project.basedir}/.openapi-generator-ignore</ignoreFileOverride>
                            <configOptions>
                                <useJakartaEe>true</useJakartaEe>
                                <useTags>true</useTags>
                                <delegatePattern>true</delegatePattern>
                                <unhandledException>true</unhandledException>
                                <dateLibrary>java8</dateLibrary>
                                <java8>true</java8>
                            </configOptions>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
